---
- hosts: ipaservers
  become: yes
  force_handlers: true
  vars:
    ldap_url: ldapi://%2fvar%2frun%2fslapd-IPA-ROBOTS-ORG-UK.socket
    crypto_policy:
      Fedora-32: NEXT
      CentOS-8: DEFAULT
      RedHat-8: DEFAULT

  tasks:
    - name: gather package_facts
      package_facts:

    - name: switch to Fedora Server
      dnf: name=fedora-release-server state=installed
      when: ansible_facts['distribution'] == 'Fedora'

    - name: choose desired crypto policy
      set_fact:
        crypto_policy_desired: "{{ crypto_policy[ansible_facts['distribution'] + '-' + ansible_facts['distribution_major_version']] | default(None) }}"
    - block:
      - name: recon active crypto policy
        command: update-crypto-policies --show
        register: crypto_policy_active
        check_mode: false
        changed_when: false
      - name: configure crypto policy
        command: update-crypto-policies --set {{crypto_policy_desired}}
        when: crypto_policy_active.stdout != crypto_policy_desired
      when: ansible_facts['crypto_policy_desired'] is not none

    - name: set timezone
      timezone:
        name: UTC

    - name: create /var/log/journal
      file:
        path: /var/log/journal
        state: directory
        mode: '2755'
        owner: root
        group: systemd-journal
      register: persistent_journal
    - name: set /var/log/journal permissions
      command: systemd-tmpfiles --create --prefix=/var/log/journal
      when: persistent_journal.changed
      register: journal_permissions
    - name: flush logs to persistent storage
      command:
        cmd: journalctl --flush
        creates: /var/log/journald/{{ansible_facts.machine_id}}
      when: persistent_journal.changed

    - name: disable password authentication for root via SSH
      lineinfile:
        path: /etc/ssh/sshd_config
        line: PermitRootLogin prohibit-password
        regexp: (?i)^\s*PermitRootLogin\b
      notify: reload ssh

    - name: install firewalld
      yum: name=firewalld state=present
    - name: start firewalld
      systemd: name=firewalld state=started enabled=yes

    - name: disable firewalld zone drifting
      ini_file:
        path: /etc/firewalld/firewalld.conf
        state: present
        section:
        option: AllowZoneDrifting
        value: 'no'
      notify: reload firewalld

    - name: recon firewalld log-denied
      command: firewall-cmd --get-log-denied
      check_mode: no
      changed_when: False
      register: firewalld_log_denied
    - name: set firewalld log-denied
      command: firewall-cmd --set-log-denied=unicast
      when: firewalld_log_denied.stdout != 'unicast'

    - name: recon firewalld default zone
      command: firewall-cmd --get-default-zone
      check_mode: no
      changed_when: False
      register: firewalld_default_zone
    - name: set firewalld default zone
      command: firewall-cmd --set-default-zone=public
      when: firewalld_default_zone.stdout != 'public'

    - name: recon firewalld public zone target
      command: firewall-cmd --permanent --zone=public --get-target
      check_mode: no
      changed_when: False
      register: firewalld_public_target
    - name: set firewalld public zone target
      command: firewall-cmd --permanent --zone=public --set-target=REJECT
      when: firewalld_public_target.stdout != 'REJECT'
      notify: reload firewalld

    - name: firewalld - allow ping
      firewalld:
        zone: public
        rich_rule: rule icmp-type name="echo-request" accept
        state: enabled
        permanent: yes
        immediate: yes

    # See <https://firewalld.org/2020/09/policy-objects-introduction>; the
    # allow-host-ipv6 policy isn't available until firewalld 0.9.x so we need
    # to allow the icmp packets listed explicitly until that version becomes
    # available in RHEL.
    - name: firewalld - allow ipv6
      firewalld:
        zone: public
        rich_rule: rule icmp-type name="{{item}}" accept
        state: enabled
        permanent: yes
        immediate: yes
      loop:
      - neighbour-advertisement
      - neighbour-solicitation
      - router-advertisement
      - redirect

    - name: firewall service configuration
      firewalld:
        zone: public
        service: '{{item.service}}'
        state: '{{item.state}}'
        permanent: yes
        immediate: yes
      loop:
        - {service: 'dns', state: 'enabled'}
        - {service: 'freeipa-ldap', state: 'disabled'}
        - {service: 'freeipa-ldaps', state: 'disabled'}
        - {service: 'freeipa-replication', state: 'disabled'}
        - {service: 'freeipa-adtrust', state: 'disabled'}
        - {service: 'freeipa-4', state: 'enabled'}

    # crypto-policies(7) takes care of this
    - name: configure httpd mod_ssl security
      lineinfile:
        path: /etc/httpd/conf.d/ssl.conf
        state: absent
        regexp: (?i)^\s*{{item}}\b
      loop:
        - SSLProtocol
      notify: restart httpd

    - name: configure httpd OCSP stapling
      copy:
        content: |
          SSLUseStapling on
          SSLStaplingCache shmcb:/var/cache/httpd/ssl/ocsp_cache(10485760)
        dest: /etc/httpd/conf.d/~ocsp-stapling.conf
      notify: restart httpd

    - name: configure ldap commands for root to use ldapi
      copy:
        content: |
          URI ldapi://%2frun%2fslapd-IPA-ROBOTS-ORG-UK.socket
          SASL_MECH EXTERNAL
        dest: /root/.ldaprc

    - name: configure slapd TLS versions
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=encryption,cn=config
        name: sslVersionMin
        values: TLS1.2
        state: exact
      notify: restart slapd
    # This used to be done by FreeIPA itself
    # <350954589774499d99bf87cb5631c664bb0707c4> but was later reverted
    # <294aa3a33375dc246b2a733fce3cbd09a39071a0>.
    #
    # The meaning of the value 56 is obscure. Try with 256.
    # <https://fy.blackhats.net.au/blog/html/2016/11/23/the_minssf_trap.html>
    - name: configure slapd minimum security strength factor
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=config
        name: nsslapd-minssf
        values: 56
        state: exact
      notify: restart slapd
    - name: require authentication for slapd (except for Root DSE)
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=config
        name: nsslapd-allow-anonymous-access
        values: rootdse
        state: exact
      notify: restart slapd
    - name: require confidentiality for slapd binds
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=config
        name: nsslapd-require-secure-binds
        values: 'on'
        state: exact
      notify: restart slapd
    # Has the side-effect of disbling simple binds via ldapi. SASL EXTERNAL
    # authentication still works though.
    - name: enable rootdn_access plugin
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=RootDN Access Control,cn=plugins,cn=config
        name: nsslapd-pluginEnabled
        values: 'on'
        state: exact
      notify: restart slapd
    # Even though rootdn-allow-ip is documented as allowing wildcards, trying
    # to use them causes slapd to fail to start
    # <https://pagure.io/389-ds-base/issue/50800>.
    - name: restrict rootdn access to localhost
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=RootDN Access Control,cn=plugins,cn=config
        name: rootdn-allow-ip
        values:
          - ::1
          - 127.0.0.1
        state: exact
      notify: restart slapd

    - name: install ipa-healthcheck
      yum: name=ipa-healthcheck state=installed
    - name: start ipa-healthcheck
      systemd: name=ipa-healthcheck.timer state=started enabled=yes

  handlers:
    - name: reload ssh
      systemd: name=sshd state=reloaded
    - name: reload firewalld
      command: firewall-cmd --reload
    - name: reload bind
      systemd: name=named-pkcs11 state=reloaded
    - name: restart httpd
      systemd: name=httpd state=restarted
    - name: restart slapd
      systemd: name=dirsrv@IPA-ROBOTS-ORG-UK state=restarted
