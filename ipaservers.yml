---
- hosts: ipaservers
  become: yes
  force_handlers: true
  vars:
    ldap_url: ldapi://%2fvar%2frun%2fslapd-IPA-ROBOTS-ORG-UK.socket
  tasks:
    - name: gather package_facts
      package_facts:

    - name: set timezone
      timezone:
        name: UTC

    - name: create /var/log/journal
      file:
        path: /var/log/journal
        state: directory
        mode: '2755'
        owner: root
        group: systemd-journal
    - name: recon /var/log/journal permissions
      acl:
        path: /var/log/journal
      register: journal_acl
      check_mode: false
      changed_when: false
    - name: set /var/log/journal permissions
      command: systemd-tmpfiles --create --prefix=/var/log/journal
      when: journal_acl.acl|length == 3
      register: journal_permissions
    - name: flush logs to persistent storage
      command:
        cmd: journalctl --flush
        creates: /var/log/journald/{{ansible_facts.machine_id}}
      when: not journal_permissions.skipped

    - name: disable password authentication for root via SSH
      lineinfile:
        path: /etc/ssh/sshd_config
        line: PermitRootLogin prohibit-password
        regexp: (?i)^\s*PermitRootLogin\b
      notify: reload ssh

    - name: install firewalld
      yum: name=firewalld state=present
    - name: start firewalld
      systemd: name=firewalld state=started enabled=yes

    - name: recon firewalld log-denied
      command: firewall-cmd --get-log-denied
      check_mode: no
      changed_when: False
      register: firewalld_log_denied
    - name: set firewalld log-denied
      command: firewall-cmd --set-log-denied=unicast
      when: firewalld_log_denied.stdout != 'unicast'

    - name: recon firewalld default zone
      command: firewall-cmd --get-default-zone
      check_mode: no
      changed_when: False
      register: firewalld_default_zone
    - name: set firewalld default zone
      command: firewall-cmd --set-default-zone=public
      when: firewalld_default_zone.stdout != 'public'

    - name: recon firewalld freeipa-4 service definition
      stat:
        path: /usr/lib/firewalld/services/freeipa-4.xml
      register: firewalld_svc_freeipa4
    - name: provide firewalld freeipa-4 service definition
      copy:
        src: files/firewalld/freeipa-4.xml
        dest: /etc/firewalld/services/freeipa-4.xml
        seuser: _default
        serole: _default
        setype: _default
        selevel: _default
      when: not firewalld_svc_freeipa4.stat.exists
      notify: reload firewalld
    - name: remove firewalld freeipa-4 service definition
      file:
        path: /etc/firewalld/services/freeipa-4.xml
        state: absent
      when: firewalld_svc_freeipa4.stat.exists
      notify: reload firewalld
    - name: apply firewalld service changes
      meta: flush_handlers

    - name: firewall service configuration
      firewalld:
        zone: public
        service: '{{item.service}}'
        state: '{{item.state}}'
        permanent: yes
        immediate: yes
      loop:
        - {service: 'dns', state: 'enabled'}
        - {service: 'freeipa-ldap', state: 'disabled'}
        - {service: 'freeipa-ldaps', state: 'disabled'}
        - {service: 'freeipa-replication', state: 'disabled'}
        - {service: 'freeipa-adtrust', state: 'disabled'}
        - {service: 'freeipa-4', state: 'enabled'}

    - name: set named to be authoritative-only
      lineinfile:
        path: /etc/named.conf
        line: "\trecursion no;"
        regexp: (?i)^\s*recursion\b
        insertafter: \ballow-recursion\b
      notify: reload bind

    - name: configure httpd mod_nss security
      when: "'mod_nss' in ansible_facts.packages"
      lineinfile:
        path: /etc/httpd/conf.d/nss.conf
        line: '{{item.name}} {{item.value}}'
        regexp: (?i)^\s*{{item.name}}\b
      loop:
        - {'name': 'NSSProtocol', 'value': '{{protocol|join(",")}}'}
        - {'name': 'NSSCipherSuite', 'value': '{{ciphersuite|join(",")}}'}
      vars:
        protocol:
          - TLSv1.2
        ciphersuite:
          - +aes_128_sha_256
          - +aes_256_sha_256
          - +ecdhe_ecdsa_aes_128_gcm_sha_256
          - +ecdhe_ecdsa_aes_128_sha
          - +ecdhe_ecdsa_aes_256_gcm_sha_384
          - +ecdhe_ecdsa_aes_256_sha
          - +ecdhe_rsa_aes_128_gcm_sha_256
          - +ecdhe_rsa_aes_128_sha
          - +ecdhe_rsa_aes_256_gcm_sha_384
          - +ecdhe_rsa_aes_256_sha
          - +rsa_aes_128_gcm_sha_256
          - +rsa_aes_128_sha
          - +rsa_aes_256_gcm_sha_384
          - +rsa_aes_256_sha
      notify: restart httpd

    # crypto-policies(7) takes care of this
    - name: configure httpd mod_ssl security
      when: "'mod_ssl' in ansible_facts.packages"
      lineinfile:
        path: /etc/httpd/conf.d/ssl.conf
        state: absent
        regexp: (?i)^\s*{{item.name}}\b
      notify: restart httpd

    - name: configure slapd TLS versions
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=encryption,cn=config
        name: sslVersionMin
        values: TLS1.2
        state: exact
      notify: restart slapd
    # This used to be done by FreeIPA itself
    # <350954589774499d99bf87cb5631c664bb0707c4> but was later reverted
    # <294aa3a33375dc246b2a733fce3cbd09a39071a0>.
    #
    # The meaning of the value 56 is obscure. Try with 256.
    # <https://fy.blackhats.net.au/blog/html/2016/11/23/the_minssf_trap.html>
    - name: configure slapd minimum security strength factor
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=config
        name: nsslapd-minssf
        values: 56
        state: exact
      notify: restart slapd
    - name: require authentication for slapd (except for Root DSE)
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=config
        name: nsslapd-allow-anonymous-access
        values: rootdse
        state: exact
      notify: restart slapd
    - name: require confidentiality for slapd binds
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=config
        name: nsslapd-require-secure-binds
        values: 'on'
        state: exact
      notify: restart slapd
    # Has the side-effect of disbling simple binds via ldapi. SASL EXTERNAL
    # authentication still works though.
    - name: enable rootdn_access plugin
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=RootDN Access Control,cn=plugins,cn=config
        name: nsslapd-pluginEnabled
        values: 'on'
        state: exact
      notify: restart slapd
    # Even though rootdn-allow-ip is documented as allowing wildcards, trying
    # to use them causes slapd to fail to start
    # <https://pagure.io/389-ds-base/issue/50800>.
    - name: restrict rootdn access to localhost
      ldap_attr:
        server_uri: '{{ldap_url}}'
        dn: cn=RootDN Access Control,cn=plugins,cn=config
        name: rootdn-allow-ip
        values:
          - ::1
          - 127.0.0.1
        state: exact
      notify: restart slapd

    - name: restrict tomcat to TLSv1.2
      xml:
        path: /etc/pki/pki-tomcat/server.xml
        xpath: /Server/Service[@name='Catalina']/Connector[@name='Secure']
        attribute: '{{item}}'
        value: 'tls1_2:tls1_2'
      loop:
        - sslVersionRangeDatagram
        - sslVersionRangeStream
      notify: restart tomcat

  handlers:
    - name: reload ssh
      systemd: name=sshd state=reloaded
    - name: reload firewalld
      command: firewall-cmd --reload
    - name: reload bind
      systemd: name=named-pkcs11 state=reloaded
    - name: restart httpd
      systemd: name=httpd state=restarted
    - name: restart slapd
      systemd: name=dirsrv@IPA-ROBOTS-ORG-UK state=restarted
    - name: restart tomcat
      systemd: name=pki-tomcatd@pki-tomcat state=restarted
