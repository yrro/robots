- name: configure dirsrv
  ldap_attrs:
    dn: cn=config
    attributes:
      nsslapd-minssf-exclude-rootdse: "on"
      nsslapd-minssf: 56
      nsslapd-require-secure-binds: "on"
      nsslapd-allow-anonymous-access: "off"
      #nsslapd-auditlog-logging-enabled: "on"
    server_uri: '{{ ipa_server_ldapi_uri }}'
    state: exact

- name: configure dirsrv security
  ldap_attrs:
    dn: cn=encryption,cn=config
    attributes:
      nsTLSAllowClientRenegotiation: "off"
    server_uri: '{{ ipa_server_ldapi_uri }}'
    state: exact
  notify: restart dirsrv

- name: configure dirsrv RootDN Access Control
  ldap_attrs:
    dn: cn=RootDN Access Control,cn=plugins,cn=config
    attributes:
      nsslapd-pluginEnabled: "on"
      rootdn-allow-ip:
      - ::1
      - 127.*
    server_uri: '{{ ipa_server_ldapi_uri }}'
    state: exact
  notify: restart dirsrv

- name: configure dirsrv monitoring system account
  ldap_entry:
    dn: uid=dirsrv-mon,cn=sysaccounts,cn=etc,dc=ipa,dc=robots,dc=org,dc=uk
    objectClass:
    - account
    - simpleSecurityObject
    attributes:
      description: for 389-ds-exporter
      userPassword: '{{ lookup("password", "/dev/null", chars="printable", length=20) }}'
    server_uri: '{{ ipa_server_ldapi_uri }}'
    state: present
  when: inventory_hostname == groups.ipaservers|first

- name: configure dirsrv monitoring system account password
  ldap_passwd:
    dn: uid=dirsrv-mon,cn=sysaccounts,cn=etc,dc=ipa,dc=robots,dc=org,dc=uk
    passwd: '{{ ipa_server_dirsrv_mon_password }}'
    server_uri: '{{ ipa_server_ldapi_uri }}'
  when: inventory_hostname == groups.ipaservers|first

- name: allow dirsrv-mon to monitor ldbm statistics
  ldap_attrs:
    dn: cn=ldbm database,cn=plugins,cn=config
    attributes:
      aci:
      - (targetfilter = "(|(cn=monitor)(cn=database))")
        (targetattr = "*")
        (
          version 3.0;
          acl "dirsrv monitoring of ldbm statistics";
          allow (search, read)
          (userdn = "ldap:///uid=dirsrv-mon,cn=sysaccounts,cn=etc,dc=ipa,dc=robots,dc=org,dc=uk")
          ;
        )
    state: present
    server_uri: '{{ ipa_server_ldapi_uri }}'

- name: allow dirsrv-mon to monitor replication
  ldap_attrs:
    dn: cn=mapping tree,cn=config
    attributes:
      aci:
      - (targetfilter = "(|(objectclass=nsds5replica)(objectclass=nsds5replicationagreement))")
        (targetattr = "*")
        (
          version 3.0;
          acl "dirsrv monitoring of replication";
          allow (search, read)
          (userdn = "ldap:///uid=dirsrv-mon,cn=sysaccounts,cn=etc,dc=ipa,dc=robots,dc=org,dc=uk")
          ;
        )
    state: present
    server_uri: '{{ ipa_server_ldapi_uri }}'

- name: store dirsrv-mon password in a secret
  containers.podman.podman_secret:
    name: dirsrv-mon-password
    data: '{{ ipa_server_dirsrv_mon_password }}'
    state: present
  register: ipa_server_dirsrv_exporter_secret_password

- name: store dirsrv URL in a secret
  containers.podman.podman_secret:
    name: dirsrv-mon-url
    data: '{{ ipa_server_ldapi_uri | replace("ldapi://", "ldapi://%2Fhost") }}'
    state: present
  register: ipa_server_dirsrv_exporter_secret_url

- name: run dirsrv-exporter
  containers.podman.podman_container:
    name: dirsrv-exporter
    image: ghcr.io/yrro/dirsrv-exporter
    state: quadlet
    network: host
    env:
      389_DS_EXPORTER_USER: uid=dirsrv-mon,cn=sysaccounts,cn=etc,dc=ipa,dc=robots,dc=org,dc=uk
    secrets:
    - dirsrv-mon-password,type=env,target=389_DS_EXPORTER_PASSWORD
    - dirsrv-mon-url,type=env,target=389_DS_EXPORTER_URL
    generate_systemd:
      restart: always
    read_only: true
    volume:
    - /run:/host/run
    label:
      io.containers.autoupdate=registry
    cpus: 1
    memory: 64m
    security_opt:
    - label=disable
    quadlet_options:
    - AutoUpdate=registry
    - NoNewPrivileges=yes
    - |
      [Install]
      WantedBy=multi-user.target
    user: 65534:65534
  register: ipa_server_dirsrv_exporter_container

- name: reload systemd units
  systemd:
    daemon_reload: true
  when: ipa_server_dirsrv_exporter_container.changed

- name: restart dirsrv-exporter
  systemd_service:
    name: dirsrv-exporter
    state: restarted
  when: '[ipa_server_dirsrv_exporter_container, ipa_server_dirsrv_exporter_secret_password, ipa_server_dirsrv_exporter_secret_url] | selectattr("changed")'
...
